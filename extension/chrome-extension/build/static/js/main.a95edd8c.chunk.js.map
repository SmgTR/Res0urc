{"version":3,"sources":["components/context/users/userContext.js","components/context/users/userReducer.js","components/types.js","components/context/users/UserState.js","components/UI/Input.js","components/UI/Button.js","components/layout/LogIn.js","components/UI/Logo.js","components/layout/Header.js","App.js","reportWebVitals.js","index.js"],"names":["usersContext","createContext","state","action","type","UserState","props","useReducer","userReducer","user","loginUser","data","a","loginData","email","password","axios","post","res","loginToken","token","localStorage","setItem","window","location","reload","console","log","Provider","value","children","Input","label","toUpperCase","slice","htmlFor","className","input","onChange","Button","text","LogIn","useContext","UserContext","useState","setLoginData","userDataHandler","e","target","name","onSubmit","preventDefault","placeholder","Logo","login","onClick","Header","App","setLoginUser","useEffect","loggedIn","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAIeA,EAFMC,0BCAN,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,ICJsB,aDKpB,MAAO,K,wBEuCEC,EArCG,SAACC,GACjB,IAIA,EAA0BC,qBAAWC,EAJhB,CACnBC,KAAM,OAGR,mBAAOP,EAAP,KAMMQ,GANN,KAMe,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAERC,EAAY,CAChBC,MAAOH,EAAKG,MACZC,SAAUJ,EAAKI,UAJH,SAOIC,IAAMC,KACtB,mDACAJ,GATY,OAORK,EAPQ,OAJAC,EAeLD,EAAIP,KAAKS,MAdpBC,aAAaC,QAAQ,QAASH,GAgB5BI,OAAOC,SAASC,SAbF,gDAedC,QAAQC,IAAR,MAfc,kCAJD,IAACR,IAIA,oBAAH,uDAmBf,OACE,cAAC,EAAaS,SAAd,CAAuBC,MAAO,CAAEpB,KAAMP,EAAMO,KAAMC,aAAlD,SACGJ,EAAMwB,Y,cC3BEC,EAVD,SAACzB,GACb,IAAM0B,EAAQ1B,EAAM0B,MAAM,GAAGC,cAAgB3B,EAAM0B,MAAME,MAAM,GAC/D,OACE,eAAC,WAAD,WACE,uBAAOC,QAAS7B,EAAM0B,MAAtB,SAA8BA,IAC9B,+CAAOI,UAAU,SAAY9B,EAAM+B,OAAnC,IAA0CC,SAAUhC,EAAMgC,gBCDjDC,EAJA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OAAO,wBAAQJ,UAAU,MAAlB,SAAyBI,KCgDnBC,EA9CD,WACZ,IAEQ/B,EAFYgC,qBAAWC,GAEvBjC,UAER,EAAkCkC,mBAAS,CACzC9B,MAAO,GACPC,SAAU,KAFZ,mBAAOF,EAAP,KAAkBgC,EAAlB,KAKMC,EAAkB,SAACC,GACvBF,EAAa,2BAAKhC,GAAN,kBAAkBkC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOnB,UAQzD,OACE,qBAAKO,UAAU,uBAAf,SACE,uBAAMA,UAAU,eAAec,SAPV,SAACH,GACxBrC,EAAUG,GACVkC,EAAEI,kBAKA,UACE,cAAC,EAAD,CACEnB,MAAO,QACPK,MAAO,CACLjC,KAAM,OACNgD,YAAa,QACbH,KAAM,SAERX,SAAUQ,IAEZ,cAAC,EAAD,CACEd,MAAO,WACPK,MAAO,CACLjC,KAAM,WACNgD,YAAa,WACbH,KAAM,YAERX,SAAUQ,IAEZ,cAAC,EAAD,CAAQN,KAAK,iBCnCNa,EARF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,cAAC,WAAD,UACE,oBAAIC,QAASD,EAAb,wBCOSE,EARA,WACb,OACE,qBAAKpB,UAAU,UAAf,SACE,cAAC,EAAD,OCyBSqB,MA1Bf,WACE,MAA6Bb,oBAAS,GAAtC,mBAAOnC,EAAP,KAAaiD,EAAb,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAWvC,aAAawC,QAAQ,SAGpCH,IADEE,KAKH,CAACnD,IAGF,eAAC,EAAD,YACIA,GACA,sBAAK2B,UAAU,UAAf,UACE,sEACA,cAAC,EAAD,OAGH3B,GAAQ,cAAC,EAAD,QCfAqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a95edd8c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst usersContext = createContext();\n\nexport default usersContext;\n","import { LOGIN_USER } from '../../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOGIN_USER: {\n      return {};\n    }\n  }\n};\n","export const LOGIN_USER = \"LOGIN_USER\"","import React, { useReducer } from 'react';\nimport UsersContext from './userContext';\nimport userReducer from './userReducer';\nimport axios from 'axios';\n\nimport {} from '../../types';\n\nconst UserState = (props) => {\n  const initialState = {\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  const setToken = (loginToken) => {\n    localStorage.setItem('token', loginToken);\n  };\n\n  const loginUser = async (data) => {\n    try {\n      const loginData = {\n        email: data.email,\n        password: data.password,\n      };\n\n      const res = await axios.post(\n        'https://res0urc.herokuapp.com/api/v1/users/login',\n        loginData\n      );\n      setToken(res.data.token);\n\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <UsersContext.Provider value={{ user: state.user, loginUser }}>\n      {props.children}\n    </UsersContext.Provider>\n  );\n};\n\nexport default UserState;\n","import React, { Fragment } from 'react';\n\nconst Input = (props) => {\n  const label = props.label[0].toUpperCase() + props.label.slice(1);\n  return (\n    <Fragment>\n      <label htmlFor={props.label}>{label}</label>\n      <input className='input' {...props.input} onChange={props.onChange} />\n    </Fragment>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Button = ({ text }) => {\n  return <button className='btn'>{text}</button>;\n};\n\nexport default Button;\n","import React, { useState, useContext } from 'react';\nimport Input from '../UI/Input';\nimport Button from '../UI/Button';\nimport UserContext from '../context/users/userContext';\n\nconst LogIn = () => {\n  const userContext = useContext(UserContext);\n\n  const { loginUser } = userContext;\n\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const userDataHandler = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  const loginUserHandler = (e) => {\n    loginUser(loginData);\n    e.preventDefault();\n  };\n\n  return (\n    <div className='login input__default'>\n      <form className='login__form ' onSubmit={loginUserHandler}>\n        <Input\n          label={'email'}\n          input={{\n            type: 'text',\n            placeholder: 'Email',\n            name: 'email',\n          }}\n          onChange={userDataHandler}\n        />\n        <Input\n          label={'password'}\n          input={{\n            type: 'password',\n            placeholder: 'Password',\n            name: 'password',\n          }}\n          onChange={userDataHandler}\n        />\n        <Button text='Log in' />\n      </form>\n    </div>\n  );\n};\n\nexport default LogIn;\n","import React, { Fragment } from 'react';\n\nconst Logo = ({ login }) => {\n  return (\n    <Fragment>\n      <h1 onClick={login}>ResourC</h1>\n    </Fragment>\n  );\n};\n\nexport default Logo;\n","import React, { useContext } from 'react';\nimport Logo from '../UI/Logo';\nimport UserContext from '../context/users/userContext';\n\nconst Header = () => {\n  return (\n    <nav className='nav_bar'>\n      <Logo />\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport './sass/main.scss';\nimport UserState from './components/context/users/UserState';\nimport LogIn from './components/layout/LogIn';\nimport Header from './components/layout/Header';\n\nfunction App() {\n  const [user, setLoginUser] = useState(true);\n\n  useEffect(() => {\n    const loggedIn = localStorage.getItem('token');\n\n    if (loggedIn) {\n      setLoginUser(true);\n    } else {\n      setLoginUser(false);\n    }\n  }, [user]);\n\n  return (\n    <UserState>\n      {!user && (\n        <div className='no-user'>\n          <h1>Log in to start using our extension.</h1>\n          <LogIn />\n        </div>\n      )}\n      {user && <Header />}\n    </UserState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}